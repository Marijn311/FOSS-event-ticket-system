"""
Ticket systeem 
Made by Marijn Borghouts
"""

import random 
import string
import smtplib
import pandas as pd
import mysql.connector # pip3 install mysql-connector-python-rf

"""
Connect to database
This is a very small database that is hosted online on "clever cloud".
Clever cloud offers a free hosted database for very small developer testing.
It can store something like 10MB but that is enough for this purpose.
I could also host a database on the same raspberry pi that runs this website,
if I ever want to improve this project.
"""

mydb = mysql.connector.connect(
  host="balbwuq2vgphmafftda4-mysql.services.clever-cloud.com",  
  user="u0rzyyrzeczuua0e",
  password="0gAOcli6gNMMMn3zzz31",
  database="balbwuq2vgphmafftda4",
  port="3306",
)

# Create cursor in the database, this is an object needed to send and retrieve info from the database
mycursor = mydb.cursor(buffered=True)

# Load email list 
# The excel file should have columns with "Names" and "Email" as first row (header)
loaded_exel = pd.read_excel (r'C:/Users/20192010/Downloads/deelnemers.xlsx') 
email_list = loaded_exel['Email'].tolist()
names_list = loaded_exel['Names'].tolist() 


# Generate random codes
def generate_code():
    """
    With 3 letters in a code there are 26^3=17.576 possible combinations. 
    # Assume a party or other activity has a maximum of 200 guests than one in 17.576/200=~88 codes are valid, 
    # so guessing won't effectively work. It is always possible to change the code length to create more possible combinations. 
    # Using letter codes instead of QR codes saves phone battery for the scanner. Besides, people can remember three letters
    # so you do not need to wait for everyone to take out there phone at the door.
    """
    code_length = 3 
    random_code = ''.join(random.choices(string.ascii_letters,k=code_length))
    random_code = random_code.upper()
    return random_code

# ---------------------------MAKE SURE TO CLEAR OUT THE DATABASE BEFORE ADDING NEW TIKETS----------------------------
sender_email= 'marijnborghouts@gmail.com'
password = input(str("Enter 16 character password to confirm that you want to send the emails:"))
# My specific 16 character password is: kyrgxwhgbpluclua
# This password is generated by google and cannot be changed

# Setup the email connection
with smtplib.SMTP('smtp.gmail.com', 587) as smtp: #587 is the port number
    smtp.ehlo()
    smtp.starttls()
    smtp.ehlo()
    smtp.login(sender_email, password)
    valid_codes=[]  
    for i in range(len(email_list)):
        receiver_email=email_list[i]
        save_code = generate_code()
        while save_code in valid_codes: # As long as the generated random code already exists, make a new code
            save_code = generate_code()
        valid_codes.append(save_code)
        
        # Here you write the actual message that people get in the mail    
        subject = 'Toegangscode voor BMT-feest'
        body = f'Beste {names_list[i]},\n\n Leuk dat je naar het BMT-Feest komt. \nJouw unieke toegangscode is: {save_code} \n\n Veel plezier, \n De Fissacom' 
        message = f'Subject: {subject}\n\n{body}'
        smtp.sendmail(sender_email, receiver_email, message)
        
        # Add the ticket that has been send out to the database
        query = "INSERT INTO Tickets (name, email, code, valid) VALUES (%s, %s, %s, %s)"
        val = (names_list[i], receiver_email, save_code, True)
        mycursor.execute(query, val)
        mydb.commit()
        
print('Emails with tickets have succesfully been send.')

# Het exporteren van de deelnemerslijst creeÃ«rd soms random dubbele entries
